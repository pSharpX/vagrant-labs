# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

require 'json'

dir = File.dirname(File.expand_path(__FILE__))

file = File.read("#{dir}/config.json")
data = JSON.parse(file)
vms = data['vms']

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  if data['box'].to_s != ''
    config.vm.box = "#{data['box']}"
  end

  if data['box_url'].to_s != ''
    config.vm.box_url = "#{data['box_url']}"
  end

  # config.vm.usable_port_range = (10200..10500)

  vms.each do |i, vm|
    config.vm.define vm["name"] do |node|
      # node.vm.network "forwarded_port", guest: 8080, host: 8080, auto_correct: true
      # node.vm.network "private_network", type: "dhcp"
      node.vm.network "public_network"
      # node.vm.synced_folder "./repo", "/repo", create: true
      # node.vm.provision :shell, path: "build-web.sh"

      if vm['box'].to_s != ''
        node.vm.box = "#{vm['box']}"
      end
    
      if vm['box_url'].to_s != ''
        node.vm.box_url = "#{vm['box_url']}"
      end
    
      if vm['hostname'].to_s != ''
        node.vm.hostname = "#{vm['hostname']}"
      end
    
      if vm['network']['private_network'].to_s != ''
        node.vm.network "private_network", ip: "#{vm['network']['private_network']}"
      end
    
      vm['network']['forwarded_port'].each do |i, port|
        if port['guest'] != '' && port['host'] != ''
          node.vm.network :forwarded_port, guest: port['guest'].to_i, host: port['host'].to_i
        end
      end

      vm['synced_folder'].each do |i, folder|
        if folder['source'] != '' && folder['target'] != ''
          if folder['create'] == true
            config.vm.synced_folder "#{folder['source']}", "#{folder['target']}", id: "#{i}", create: true
          else
            config.vm.synced_folder "#{folder['source']}", "#{folder['target']}", id: "#{i}"
          end
        end
      end

      node.vm.provider "virtualbox" do |vb|
        vb.cpus = 1
        vb.memory = "1024"
        vb.name = "#{vm["name"]}"
      end
    end
  end

  if data['vm']['chosen_provider'].empty? || data['vm']['chosen_provider'] == "virtualbox"
    ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'

    config.vm.provider :virtualbox do |virtualbox|
      data['vm']['provider']['virtualbox']['modifyvm'].each do |key, value|
        if key == "memory"
          next
        end

        if key == "natdnshostresolver1"
          value = value ? "on" : "off"
        end

        virtualbox.customize ["modifyvm", :id, "--#{key}", "#{value}"]
      end

      virtualbox.customize ["modifyvm", :id, "--memory", "#{data['vm']['memory']}"]
    end
  end
  
  ssh_username = !data['ssh']['username'].nil? ? data['ssh']['username'] : "vagrant"

  # config.vm.provision "shell" do |s|
  #   s.path = "puphpet/shell/initial-setup.sh"
  #   s.args = "/vagrant/puphpet"
  # end
  # config.vm.provision "shell" do |kg|
  #   kg.path = "puphpet/shell/ssh-keygen.sh"
  #   kg.args = "#{ssh_username}"
  # end
  # config.vm.provision :shell, :path => "puphpet/shell/update-puppet.sh"
  # config.vm.provision :shell, :path => "puphpet/shell/execute-files.sh"
  # config.vm.provision :shell, :path => "puphpet/shell/important-notices.sh"

  # if File.file?("#{dir}/puphpet/files/dot/ssh/id_rsa")
  #   config.ssh.private_key_path = [
  #     "#{dir}/puphpet/files/dot/ssh/id_rsa",
  #     "#{dir}/puphpet/files/dot/ssh/insecure_private_key"
  #   ]
  # end

  if !data['ssh']['host'].nil?
    config.ssh.host = "#{data['ssh']['host']}"
  end
  if !data['ssh']['port'].nil?
    config.ssh.port = "#{data['ssh']['port']}"
  end
  if !data['ssh']['username'].nil?
    config.ssh.username = "#{data['ssh']['username']}"
  end
  if !data['ssh']['guest_port'].nil?
    config.ssh.guest_port = data['ssh']['guest_port']
  end
  if !data['ssh']['shell'].nil?
    config.ssh.shell = "#{data['ssh']['shell']}"
  end
  if !data['ssh']['keep_alive'].nil?
    config.ssh.keep_alive = data['ssh']['keep_alive']
  end
  if !data['ssh']['forward_agent'].nil?
    config.ssh.forward_agent = data['ssh']['forward_agent']
  end
  if !data['ssh']['forward_x11'].nil?
    config.ssh.forward_x11 = data['ssh']['forward_x11']
  end
  if !data['vagrant']['host'].nil?
    config.vagrant.host = data['vagrant']['host'].gsub(":", "").intern
  end

end
