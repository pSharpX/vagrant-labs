# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  number_of_machines = 3
  base_ip = 100
  base_ip_addresses = "192.168.99"
  ip_addresses = (1..number_of_machines).map{ |i| "#{base_ip_addresses}.#{base_ip + i}" }
  
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "psharpx/openjdk8-primary"
  
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  
  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
	
  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.99.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  # config.vm.synced_folder "./was/deployment", "/opt/wildfly/standalone/deployments/", create: true
  # config.vm.synced_folder "./was/log", "/opt/wildfly/standalone/log/", create: true


  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL

  config.vm.provision :shell, path: "bootstrap.sh"
  config.vm.provision :shell, path: "config/add-user.sh"

  config.vm.define "wildfly-master", primary: true do |master|
    # config.vm.define "wildfly20_dev_environment"
    master.vm.hostname = "wildfly-master"
    master.vm.network "forwarded_port", guest: 8080, host: 8080, auto_correct: true
    master.vm.network "forwarded_port", guest: 9990, host: 9990, auto_correct: true
    master.vm.network "private_network", ip: "192.168.99.18"
    master.vm.network "public_network"
    # master.vm.synced_folder "./repo", "/repo", create: true
    # master.vm.provision :shell, path: "build-web.sh"
    master.vm.provider "virtualbox" do |vb|
      vb.cpus = 2
      vb.memory = "2048"
      vb.name = "wildfly-master"
    end
  end

  (1..number_of_machines).each do |i|
    config.vm.define "wildfly-slave-#{i}" do |node|
      # config.vm.define "wildfly20_dev_environment"
      node.vm.hostname = "wildfly-slave-#{i}"
      # node.vm.network "forwarded_port", guest: 8080, host: 8080, auto_correct: true
      # node.vm.network "forwarded_port", guest: 9990, host: 9990, auto_correct: true
      # node.vm.network "private_network", type: "dhcp"
      node.vm.network "private_network", ip: "#{ip_addresses[i-1]}"
      node.vm.network "public_network"
      # node.vm.synced_folder "./repo", "/repo", create: true
      # node.vm.provision :shell, path: "build-web.sh"
      node.vm.provider "virtualbox" do |vb|
        vb.cpus = 1
        vb.memory = "1024"
        vb.name = "wildfly-slave-#{i}"
      end
    end
  end

end